import{join}from'path';import{promises as _0x3dcd7a}from'fs';import{promisify}from'util';import{google}from'googleapis';const SCOPES=['https://www.googleapis.com/auth/drive.metadata.readonly'],TOKEN_PATH=join(__dirname,'..','token.json');class GoogleAuth extends EventEmitter{constructor(){super();}async['authorize'](_0x434dc3){let _0x303cef;const {client_secret:_0x4f6cab,client_id:_0x27c272}=_0x434dc3,_0x3f7d73=new google['auth']['OAuth2'](_0x27c272,_0x4f6cab,'http://localhost:'+port);try{_0x303cef=JSON['parse'](await _0x3dcd7a['readFile'](TOKEN_PATH));}catch(_0x31e7da){const _0x20eb0f=_0x3f7d73['generateAuthUrl']({'access_type':'offline','scope':SCOPES});this['emit']('auth',_0x20eb0f);const _0x5a6d0f=await promisify(this['once'])['bind'](this)('token');_0x303cef=await _0x3f7d73['getToken'](_0x5a6d0f),await _0x3dcd7a['writeFile'](TOKEN_PATH,JSON['stringify'](_0x303cef));}finally{await _0x3f7d73['setCredentials'](_0x303cef);}}['token'](_0x20d44a){this['emit']('token',_0x20d44a);}}class GoogleDrive extends GoogleAuth{constructor(){super(),this['path']='/drive/api';}async['getFolderID'](_0xb04497){}async['infoFile'](_0x39d1eb){}async['folderList'](_0x3eaa98){}async['downloadFile'](_0x58775c){}async['uploadFile'](_0xac587c){}}export{GoogleAuth,GoogleDrive};